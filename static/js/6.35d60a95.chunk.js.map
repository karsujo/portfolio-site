{"version":3,"sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx"],"names":["Col","React","props","ref","as","bsPrefix","className","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","classNames","useCol","colProps","Component","_jsx","length","displayName","Button","variant","size","active","prefix","useButtonProps","tagName","buttonProps","href","disabled","defaultProps","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Badge","pill","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","theme","useContext","ThemeContext","project","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","src","image","title","bodyText","links","map","link","onClick","window","open","tags","cardFooterBackground","tag","bsPrimaryVariant"],"mappings":"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","file":"static/js/6.35d60a95.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n"],"sourceRoot":""}